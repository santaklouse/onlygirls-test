user  nginx;
worker_processes  auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    resolver 127.0.0.11 ipv6=off;
    # proxy to frankenphp
    server {
        listen 80;
        listen [::]:80;

        http2 on;

        # Enable QUIC and HTTP/3.
        listen 443 quic reuseport;

        # Enable HTTP/2 (optional).
        listen 443 ssl;

        # Enable all TLS versions (TLSv1.3 is required for QUIC).
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        # Add Alt-Svc header to negotiate HTTP/3.
        add_header Alt-Svc 'h3=":443"';

        server_name _;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        location / {
            set $upstream_keepalive false;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
#             proxy_set_header Host localhost;
            set $upstream_keepalive false;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_name localhost;
            proxy_set_header Host localhost;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            set $upstream_app onlygirls-test-app;
            set $upstream_port 443;
            set $upstream_proto https;
            proxy_pass $upstream_proto://$upstream_app:$upstream_port;
            proxy_pass_request_headers      on;
        }

        location /img/ {
            set $upstream_keepalive false;
            set $upstream_app onlygirls-test-thumbor;
            proxy_pass_request_headers      on;

            rewrite ^ $request_uri;
            rewrite ^/img/(.*) $1 break;
            return 400;
            proxy_pass http://$upstream_app:80/$uri;
        }
    }
}
